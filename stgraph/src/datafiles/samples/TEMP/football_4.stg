<stgraph class="STGraph.decoder" version="STGraph build 22.05">
    <head systemName="" description="" timeUnitDescription="" timeFrame="0" time0="0.0" time1="1999.0" timeD="1.0" maxSteps="10" batchSteps="1" width="1282" height="709" scale="1.0" simulationDelay="1" stepsBeforePause="1" integrationMethod="0" exceptionHandling="1" withInterrupts="true" isDataSaved="false" forNet="false" serverAddress="" forWeb="false" webModelLanguages="" webModelDescription="" webTimeUnit="" webExplTitle="" webExplURL="" webModelGroups="" indexOrigin="0" isGraphVisible="true" areWidgetsVisible="true"/>
    <nodes>
        <node name="MC_rep" type="ValueNode" pos-x="490" pos-y="190" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit>1</fStateInit>
            <format>0.0##</format>
            <fExpression/>
            <fStateTrans>if(this+1&gt;repetition,1,this+1)</fStateTrans>
            <expression/>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit>1</stateInit>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans>if(this+1&gt;repetition,1,this+1)</stateTrans>
            <backcol>255,255,255</backcol>
            <customprops>Name=MC_rep</customprops>
            <valueType>1</valueType>
        </node>
        <node name="goal_a" type="ValueNode" pos-x="380" pos-y="390" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>poisson([xG_a[0]*xG_h[1]])</fExpression>
            <fStateTrans/>
            <expression>poisson([xG_a[0]*xG_h[1]])</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=goal_a</customprops>
            <valueType>0</valueType>
        </node>
        <node name="goal_h" type="ValueNode" pos-x="380" pos-y="310" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>poisson([xG_h[0]*xG_a[1]])</fExpression>
            <fStateTrans/>
            <expression>poisson([xG_h[0]*xG_a[1]])</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=goal_h</customprops>
            <valueType>0</valueType>
        </node>
        <node name="match" type="ValueNode" pos-x="260" pos-y="130" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit>0</fStateInit>
            <format>0.0##</format>
            <fExpression>0</fExpression>
            <fStateTrans>this+if(MC_rep==repetition&amp;&amp;time!=0,1,0)</fStateTrans>
            <expression>0</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit>0</stateInit>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans>this+if(MC_rep==repetition&amp;&amp;time!=0,1,0)</stateTrans>
            <backcol>255,255,255</backcol>
            <customprops>Name=match</customprops>
            <valueType>1</valueType>
        </node>
        <node name="match_rand" type="ValueNode" pos-x="490" pos-y="400" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>rand()</fExpression>
            <fStateTrans/>
            <expression>rand()</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=match_rand</customprops>
            <valueType>0</valueType>
        </node>
        <node name="matches_left" type="ValueNode" pos-x="110" pos-y="240" width="101" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>38-readFromXLS(&quot;football_3.xls&quot;,1,2,9)</fExpression>
            <fStateTrans/>
            <expression>38-readFromXLS(&quot;football_3.xls&quot;,1,2,9)</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=matches_left</customprops>
            <valueType>0</valueType>
        </node>
        <node name="new_points" type="ValueNode" pos-x="700" pos-y="340" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>if(MC_rep==repetition-1,if(new_results==0,set(set(array(20,0),tp[0],[1]),tp[1],[1]),new_results==1,set(array(20,0),tp[0],[3]),set(array(20,0),tp[1],[3])),array(20,0))</fExpression>
            <fStateTrans/>
            <expression>if(MC_rep==repetition-1,if(new_results==0,set(set(array(20,0),tp[0],[1]),tp[1],[1]),new_results==1,set(array(20,0),tp[0],[3]),set(array(20,0),tp[1],[3])),array(20,0))</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=new_points</customprops>
            <valueType>0</valueType>
        </node>
        <node name="new_points_cum" type="ValueNode" pos-x="690" pos-y="400" width="101" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit>array(20,0)</fStateInit>
            <format>0.0##</format>
            <fExpression/>
            <fStateTrans>this+new_points</fStateTrans>
            <expression/>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit>array(20,0)</stateInit>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans>this+new_points</stateTrans>
            <backcol>255,255,255</backcol>
            <customprops>Name=new_points_cum</customprops>
            <valueType>1</valueType>
        </node>
        <node name="new_results" type="ValueNode" pos-x="600" pos-y="340" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>if(result_ext[0]&gt;match_rand,0,result_ext[0]+result_ext[1],1,2)</fExpression>
            <fStateTrans/>
            <expression>if(result_ext[0]&gt;match_rand,0,result_ext[0]+result_ext[1],1,2)</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=new_results</customprops>
            <valueType>0</valueType>
        </node>
        <node name="points" type="ValueNode" pos-x="590" pos-y="400" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit>readFromXLS(&quot;football_3.xls&quot;,1,2,5,21,5)</fStateInit>
            <format>0.0##</format>
            <fExpression/>
            <fStateTrans>this+new_points</fStateTrans>
            <expression/>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit>readFromXLS(&quot;football_3.xls&quot;,1,2,5,21,5)</stateInit>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans>this+new_points</stateTrans>
            <backcol>255,255,255</backcol>
            <customprops>Name=points</customprops>
            <valueType>1</valueType>
        </node>
        <node name="repetition" type="ValueNode" pos-x="700" pos-y="130" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>20</fExpression>
            <fStateTrans/>
            <expression>20</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=repetition</customprops>
            <valueType>0</valueType>
        </node>
        <node name="result_ext" type="ValueNode" pos-x="490" pos-y="340" width="71" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit>array(3,0)</fStateInit>
            <format>0.0##</format>
            <fExpression>me/MC_rep</fExpression>
            <fStateTrans>if(MC_rep==repetition&amp;&amp;time!=0,array(3,0),if(goal_h&gt;goal_a,set(this,1,[this[1]+1]),goal_a&gt;goal_h,set(this,2,[this[2]+1]),set(this,0,[this[0]+1])))</fStateTrans>
            <expression>me/MC_rep</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit>array(3,0)</stateInit>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans>if(MC_rep==repetition&amp;&amp;time!=0,array(3,0),if(goal_h&gt;goal_a,set(this,1,[this[1]+1]),goal_a&gt;goal_h,set(this,2,[this[2]+1]),set(this,0,[this[0]+1])))</stateTrans>
            <backcol>255,255,255</backcol>
            <customprops>Name=result</customprops>
            <valueType>2</valueType>
        </node>
        <node name="schedule" type="ValueNode" pos-x="380" pos-y="240" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>readFromXLS(&quot;football_3.xls&quot;,2,2,3,101,4)</fExpression>
            <fStateTrans/>
            <expression>readFromXLS(&quot;football_3.xls&quot;,2,2,3,101,4)</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=schedule</customprops>
            <valueType>0</valueType>
        </node>
        <node name="stop" type="ValueNode" pos-x="790" pos-y="260" width="75" height="41">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>if(times[0]==38&amp;&amp;times[1]==10,0,1)</fExpression>
            <fStateTrans/>
            <expression>if(times[0]==38&amp;&amp;times[1]==10,0,1)</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>OnZero=end(&quot;championship end&quot;);Name=stop</customprops>
            <valueType>0</valueType>
        </node>
        <node name="times" type="ValueNode" pos-x="790" pos-y="130" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit>readFromXLS(&quot;football_3.xls&quot;,2,2,1,102,2)</fStateInit>
            <format>0.0##</format>
            <fExpression>me[int(time/repetition)]</fExpression>
            <fStateTrans>this</fStateTrans>
            <expression>me[int(time/repetition)]</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit>readFromXLS(&quot;football_3.xls&quot;,2,2,1,102,2)</stateInit>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans>this</stateTrans>
            <backcol>255,255,255</backcol>
            <customprops>Name=stop</customprops>
            <valueType>2</valueType>
        </node>
        <node name="tp" type="ValueNode" pos-x="260" pos-y="240" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation>Teams playing this match</documentation>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>schedule[match]</fExpression>
            <fStateTrans/>
            <expression>schedule[match]</expression>
            <isGlobal>true</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=tp</customprops>
            <valueType>0</valueType>
        </node>
        <node name="xG_a" type="ValueNode" pos-x="260" pos-y="390" width="71" height="51">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>[xGf[tp[1]],xGs[tp[1]]]</fExpression>
            <fStateTrans/>
            <expression>[xGf[tp[1]],xGs[tp[1]]]</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=xGs_h</customprops>
            <valueType>0</valueType>
        </node>
        <node name="xG_diff" type="ValueNode" pos-x="40" pos-y="340" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>xGf-xGs</fExpression>
            <fStateTrans/>
            <expression>xGf-xGs</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=xG_diff</customprops>
            <valueType>0</valueType>
        </node>
        <node name="xG_h" type="ValueNode" pos-x="260" pos-y="310" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>[xGf[tp[0]],xGs[tp[0]]]</fExpression>
            <fStateTrans/>
            <expression>[xGf[tp[0]],xGs[tp[0]]]</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=xG_h</customprops>
            <valueType>0</valueType>
        </node>
        <node name="xGf" type="ValueNode" pos-x="120" pos-y="310" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>readFromXLS(&quot;football_3.xls&quot;,1,2,2,21,2)</fExpression>
            <fStateTrans/>
            <expression>readFromXLS(&quot;football_3.xls&quot;,1,2,2,21,2)</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=xGf</customprops>
            <valueType>0</valueType>
        </node>
        <node name="xGs" type="ValueNode" pos-x="120" pos-y="390" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>readFromXLS(&quot;football_3.xls&quot;,1,2,3,21,3)</fExpression>
            <fStateTrans/>
            <expression>readFromXLS(&quot;football_3.xls&quot;,1,2,3,21,3)</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=xGs</customprops>
            <valueType>0</valueType>
        </node>
    </nodes>
    <texts/>
    <edges>
        <edge source="repetition" target="times" label="(...)"/>
        <edge source="match" target="tp" label="(...)"/>
        <edge source="match_rand" target="new_results" label="(...)"/>
        <edge source="MC_rep" target="match" label="(...)" p0x="517.5" p0y="152.5" p1x="637.5" p1y="152.5" numpoints="2"/>
        <edge source="repetition" target="MC_rep" label="(...)" p0x="407.5" p0y="152.5" p1x="517.5" p1y="152.5" numpoints="2"/>
        <edge source="goal_a" target="result_ext" label="(...)" p0x="417.5" p0y="412.5" p1x="547.5" p1y="372.5" numpoints="2"/>
        <edge source="goal_h" target="result_ext" label="(...)" labpos-x="500.0" labpos-y="0.0" p0x="417.5" p0y="332.5" p1x="627.5" p1y="362.5" numpoints="2"/>
        <edge source="xG_a" target="goal_h" label="(...)" p0x="295.5" p0y="415.5" p1x="417.5" p1y="332.5" numpoints="2"/>
        <edge source="xG_h" target="goal_h" label="(...)" p0x="297.5" p0y="332.5" p1x="417.5" p1y="332.5" numpoints="2"/>
        <edge source="new_points" target="new_points_cum" label="(...)" p0x="737.5" p0y="362.5" p1x="740.5" p1y="282.5" numpoints="2"/>
        <edge source="xGs" target="xG_a" label="(...)" p0x="157.5" p0y="412.5" p1x="295.5" p1y="415.5" numpoints="2"/>
        <edge source="xGf" target="xG_h" label="(...)" p0x="157.5" p0y="332.5" p1x="297.5" p1y="332.5" numpoints="2"/>
        <edge source="schedule" target="tp" label="(...)" p0x="407.5" p0y="262.5" p1x="297.5" p1y="262.5" numpoints="2"/>
        <edge source="times" target="stop" label="(...)" p0x="827.5" p0y="152.5" p1x="827.5" p1y="280.5" numpoints="2"/>
        <edge source="xGs" target="xG_h" label="(...)" p0x="157.5" p0y="412.5" p1x="297.5" p1y="332.5" numpoints="2"/>
        <edge source="xGf" target="xG_a" label="(...)" p0x="157.5" p0y="332.5" p1x="295.5" p1y="415.5" numpoints="2"/>
        <edge source="new_points" target="points" label="(...)" p0x="737.5" p0y="362.5" p1x="737.5" p1y="432.5" numpoints="2"/>
        <edge source="xGf" target="xG_diff" label="(...)" p0x="157.5" p0y="332.5" p1x="77.5" p1y="362.5" numpoints="2"/>
        <edge source="xGs" target="xG_diff" label="(...)" p0x="157.5" p0y="412.5" p1x="77.5" p1y="362.5" numpoints="2"/>
        <edge source="xG_h" target="goal_a" label="(...)" p0x="297.5" p0y="332.5" p1x="417.5" p1y="412.5" numpoints="2"/>
        <edge source="xG_a" target="goal_a" label="(...)" p0x="295.5" p0y="415.5" p1x="417.5" p1y="412.5" numpoints="2"/>
        <edge source="result_ext" target="new_results" label="(...)"/>
        <edge source="MC_rep" target="result_ext" label="(...)"/>
        <edge source="MC_rep" target="new_points" label="(...)"/>
        <edge source="repetition" target="new_points" label="(...)"/>
        <edge source="new_results" target="new_points" label="(...)"/>
        <edge source="repetition" target="match" label="(...)"/>
        <edge source="match" target="result_ext" label="(...)"/>
        <edge source="repetition" target="result_ext" label="(...)"/>
    </edges>
    <widgets>
        <widget type="ChartWidget" pos-x="880" pos-y="10" width="370" height="270">
            <title/>
            <dotscolors>__RED</dotscolors>
            <linewidths>#1</linewidths>
            <showline>false</showline>
            <showtitlebar>true</showtitlebar>
            <linecolors>__RED</linecolors>
            <barscolors>__RED</barscolors>
            <dotsstyles>__style1</dotsstyles>
            <logscaley>false</logscaley>
            <logscalex>false</logscalex>
            <dotsxscales>#1</dotsxscales>
            <showbars>false</showbars>
            <autolegendy>true</autolegendy>
            <ysourcena>new_points_cum</ysourcena>
            <autolegendx>true</autolegendx>
            <typey>2</typey>
            <typex>2</typex>
            <linestyles>__style1</linestyles>
            <dotstype>dot</dotstype>
            <dotsyscales>#1</dotsyscales>
            <dotsangles>#0</dotsangles>
            <dotssizes>#6</dotssizes>
            <autoaxisy>true</autoaxisy>
            <autoaxisx>true</autoaxisx>
            <barswidths>#1</barswidths>
            <dotshilast>false</dotshilast>
            <iconized>false</iconized>
            <showdots>true</showdots>
            <xsourcena>xG_diff</xsourcena>
            <isometric>false</isometric>
            <dotslastonly>false</dotslastonly>
        </widget>
        <widget type="DataTableWidget" pos-x="1070" pos-y="220" width="120" height="350">
            <fontsize>14</fontsize>
            <colwidth>110</colwidth>
            <autowidth>true</autowidth>
            <showtitlebar>true</showtitlebar>
            <iconized>false</iconized>
            <colalignment>0</colalignment>
            <colformat>0</colformat>
            <title>points </title>
            <lastonly>false</lastonly>
            <sourcena>points</sourcena>
        </widget>
        <widget type="DataTableWidget" pos-x="20" pos-y="20" width="170" height="110">
            <fontsize>10</fontsize>
            <colwidth>160</colwidth>
            <autowidth>true</autowidth>
            <showtitlebar>true</showtitlebar>
            <iconized>false</iconized>
            <colalignment>0</colalignment>
            <colformat>###0.0###</colformat>
            <title>result_ext </title>
            <lastonly>false</lastonly>
            <sourcena>result_ext</sourcena>
        </widget>
    </widgets>
    <groups/>
    <reports/>
</stgraph>
