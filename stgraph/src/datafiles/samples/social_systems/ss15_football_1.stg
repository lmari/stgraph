<stgraph class="STGraph.decoder" version="STGraph build 22.05">
    <head systemName="" description="" timeUnitDescription="" timeFrame="0" time0="0.0" time1="2000.0" timeD="1.0" maxSteps="10" batchSteps="1" width="1282" height="709" scale="1.0" simulationDelay="100" stepsBeforePause="1" integrationMethod="0" exceptionHandling="1" withInterrupts="false" isDataSaved="false" forNet="false" serverAddress="" forWeb="false" webModelLanguages="" webModelDescription="" webTimeUnit="" webExplTitle="" webExplURL="" webModelGroups="" indexOrigin="0" isGraphVisible="true" areWidgetsVisible="true"/>
    <nodes>
        <node name="goals_A" type="ValueNode" pos-x="560" pos-y="110" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>poisson([xG_A])</fExpression>
            <fStateTrans/>
            <expression>poisson([xG_A])</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=goals_A</customprops>
            <valueType>0</valueType>
        </node>
        <node name="goals_B" type="ValueNode" pos-x="560" pos-y="280" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>poisson([xG_B])</fExpression>
            <fStateTrans/>
            <expression>poisson([xG_B])</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=goals_B</customprops>
            <valueType>0</valueType>
        </node>
        <node name="pos_res" type="ValueNode" pos-x="360" pos-y="200" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>[0:2]</fExpression>
            <fStateTrans/>
            <expression>[0:2]</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=pos_res</customprops>
            <valueType>0</valueType>
        </node>
        <node name="res_array" type="ValueNode" pos-x="460" pos-y="200" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>array(3,countIf(results,[pos_res[$i0]]))/@results</fExpression>
            <fStateTrans/>
            <expression>array(3,countIf(results,[pos_res[$i0]]))/@results</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=res_array</customprops>
            <valueType>0</valueType>
        </node>
        <node name="results" type="ValueNode" pos-x="560" pos-y="200" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit>[]</fStateInit>
            <format>0.0##</format>
            <fExpression/>
            <fStateTrans>this#if(goals_A&gt;goals_B,1,goals_B&gt;goals_A,2,0)</fStateTrans>
            <expression/>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit>[]</stateInit>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans>this#if(goals_A&gt;goals_B,1,goals_B&gt;goals_A,2,0)</stateTrans>
            <backcol>255,255,255</backcol>
            <customprops>Name=results</customprops>
            <valueType>1</valueType>
        </node>
        <node name="xG_A" type="ValueNode" pos-x="410" pos-y="110" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>[2.1]</fExpression>
            <fStateTrans/>
            <expression>0.7</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=xGs</customprops>
            <valueType>0</valueType>
        </node>
        <node name="xG_B" type="ValueNode" pos-x="420" pos-y="280" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation/>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>[1.2]</fExpression>
            <fStateTrans/>
            <expression>1.6</expression>
            <isGlobal>false</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=xG_B</customprops>
            <valueType>0</valueType>
        </node>
    </nodes>
    <texts>
        <text name="*text1" pos-x="20" pos-y="130" width="171" height="221" content="&lt;html&gt;
  &lt;head&gt;
    
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p style=&quot;margin-top: 0&quot;&gt;
      &lt;small&gt;&lt;font size=&quot;3&quot;&gt;A simple estimator of a football match result, 
      using the expected goals metric. The model lies on the assumption that 
      the xGs are computed on a sufficiently large set of homogenoeus matches 
      (i.e., ok for a football league, not for a competition such as World Cup 
      or Champions League) and that the conditions that generates the previous 
      matches are still valid (i.e., no drop in shape).&lt;/font&gt;&lt;/small&gt;
    &lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
"/>
    </texts>
    <edges>
        <edge source="results" target="res_array" label="(...)" p0x="597.5" p0y="222.5" p1x="497.5" p1y="222.5" numpoints="2"/>
        <edge source="goals_B" target="results" label="(...)" p0x="597.5" p0y="302.5" p1x="597.5" p1y="222.5" numpoints="2"/>
        <edge source="goals_A" target="results" label="(...)" p0x="597.5" p0y="132.5" p1x="597.5" p1y="222.5" numpoints="2"/>
        <edge source="xG_A" target="goals_A" label="(...)" p0x="447.5" p0y="132.5" p1x="597.5" p1y="132.5" numpoints="2"/>
        <edge source="xG_B" target="goals_B" label="(...)" p0x="457.5" p0y="302.5" p1x="597.5" p1y="302.5" numpoints="2"/>
        <edge source="pos_res" target="res_array" label="(...)" p0x="397.5" p0y="222.5" p1x="497.5" p1y="222.5" numpoints="2"/>
    </edges>
    <widgets>
        <widget type="ChartWidget" pos-x="690" pos-y="100" width="360" height="230">
            <title/>
            <dotscolors>__RED</dotscolors>
            <linewidths>#5</linewidths>
            <showline>false</showline>
            <showtitlebar>true</showtitlebar>
            <linecolors>__RED</linecolors>
            <barscolors>__RED</barscolors>
            <dotsstyles>__style1</dotsstyles>
            <logscaley>false</logscaley>
            <logscalex>false</logscalex>
            <dotsxscales>#1</dotsxscales>
            <showbars>true</showbars>
            <autolegendy>true</autolegendy>
            <ysourcena>res_array</ysourcena>
            <autolegendx>true</autolegendx>
            <typey>2</typey>
            <typex>2</typex>
            <linestyles>__style1</linestyles>
            <dotstype>dot</dotstype>
            <dotsyscales>#1</dotsyscales>
            <dotsangles>#0</dotsangles>
            <dotssizes>#1</dotssizes>
            <autoaxisy>true</autoaxisy>
            <autoaxisx>true</autoaxisx>
            <barswidths>#5</barswidths>
            <dotshilast>false</dotshilast>
            <iconized>false</iconized>
            <showdots>false</showdots>
            <xsourcena>vIndex</xsourcena>
            <isometric>false</isometric>
            <dotslastonly>false</dotslastonly>
        </widget>
        <widget type="SliderWidget" pos-x="220" pos-y="100" width="180" height="80">
            <0>0</0>
            <widgetvalue>0.7</widgetvalue>
            <max>4.0</max>
            <min>0.1</min>
            <showtitlebar>true</showtitlebar>
            <source>xG_A</source>
            <delta>0.1</delta>
            <iconized>false</iconized>
            <title>xG_A: 0.7</title>
        </widget>
        <widget type="SliderWidget" pos-x="220" pos-y="270" width="180" height="80">
            <0>0</0>
            <widgetvalue>1.6</widgetvalue>
            <max>4.0</max>
            <min>0.1</min>
            <showtitlebar>true</showtitlebar>
            <source>xG_B</source>
            <delta>0.1</delta>
            <iconized>false</iconized>
            <title>xG_B: 1.6</title>
        </widget>
    </widgets>
    <groups/>
    <reports/>
</stgraph>
