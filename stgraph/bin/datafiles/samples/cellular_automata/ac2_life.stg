<stgraph class="STGraph.decoder" version="STGraph build 23.2.16">
    <head systemName="" description="" timeUnitDescription="" timeFrame="3" time0="0.0" time1="1.7976931348623157E308" timeD="1.0" maxSteps="1" batchSteps="0" width="1270" height="723" scale="1.0" simulationDelay="1" stepsBeforePause="1" integrationMethod="0" exceptionHandling="1" withInterrupts="false" isDataSaved="false" forNet="false" serverAddress="" forWeb="false" webModelLanguages="" webModelDescription="" webTimeUnit="" webModelGroups="" indexOrigin="0" isGraphVisible="true" areWidgetsVisible="true"/>
    <nodes>
        <node name="n" type="ValueNode" pos-x="30" pos-y="120" width="75" height="45">
            <forecol>245,245,245</forecol>
            <documentation>Matrix width.</documentation>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>50</fExpression>
            <fStateTrans/>
            <expression>50</expression>
            <isGlobal>true</isGlobal>
            <isIn>true</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=n</customprops>
            <valueType>0</valueType>
        </node>
        <node name="numNeighbors" type="ValueNode" pos-x="150" pos-y="280" width="111" height="45">
            <forecol>0,0,0</forecol>
            <documentation>Temporary matrix storing the number of active neighbors for each automaton element.</documentation>
            <isOut>true</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>array([n,n],(+/+/padx[[$i0:$i0+2],[$i1:$i1+2]])-padx[$i0+1,$i1+1])</fExpression>
            <fStateTrans/>
            <expression>array([n,n],(+/+/padx[[$i0:$i0+2],[$i1:$i1+2]])-padx[$i0+1,$i1+1])</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=numNeighbors</customprops>
            <valueType>0</valueType>
        </node>
        <node name="padx" type="ValueNode" pos-x="260" pos-y="200" width="75" height="45">
            <font>Serif,12</font>
            <forecol>0,0,0</forecol>
            <documentation>Wrapped matrix.</documentation>
            <isOut>false</isOut>
            <fStateInit/>
            <format>0.0##</format>
            <fExpression>array([n+2,n+2],x[wrap($i0-1,n),wrap($i1-1,n)])</fExpression>
            <fStateTrans/>
            <expression>array([n+2,n+2],x[wrap($i0-1,n),wrap($i1-1,n)])</expression>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit/>
            <isVectorOut>false</isVectorOut>
            <fontcol>0,0,255</fontcol>
            <stateTrans/>
            <backcol>255,255,255</backcol>
            <customprops>Name=padx</customprops>
            <valueType>0</valueType>
        </node>
        <node name="x" type="ValueNode" pos-x="170" pos-y="120" width="75" height="45">
            <forecol>0,0,0</forecol>
            <documentation>Matrix storing the evolving automaton.</documentation>
            <isOut>true</isOut>
            <fStateInit>array([n,n],rand()&lt;.1)</fStateInit>
            <format>0.0##</format>
            <fExpression/>
            <fStateTrans>numNeighbors==3||(this&amp;&amp;numNeighbors==2)</fStateTrans>
            <expression/>
            <isGlobal>false</isGlobal>
            <isIn>false</isIn>
            <stateInit>array([n,n],rand()&lt;.1)</stateInit>
            <isVectorOut>false</isVectorOut>
            <stateTrans>numNeighbors==3||(this&amp;&amp;numNeighbors==2)</stateTrans>
            <backcol>255,255,255</backcol>
            <customprops>Name=x</customprops>
            <valueType>1</valueType>
        </node>
    </nodes>
    <texts>
        <text name="*text1" pos-x="70" pos-y="20" width="411" height="61" content="&lt;html&gt;   &lt;head&gt;        &lt;/head&gt;   &lt;body&gt;     &lt;h2&gt;       A sample (and simple) implementation of Life, a 2D cellular automaton     &lt;/h2&gt;   &lt;/body&gt; &lt;/html&gt; "/>
        <text name="*text2" pos-x="40" pos-y="330" width="341" height="61" content="&lt;html&gt;   &lt;head&gt;        &lt;/head&gt;   &lt;body&gt;     &lt;small&gt;If it was alive, and had 2 or 3 neighbors, it survives; otherwise,      it dies.&lt;/small&gt;&lt;br&gt;&lt;small&gt;If it was dead, and had exactly 3 neighbors, it      comes alive.&lt;/small&gt;   &lt;/body&gt; &lt;/html&gt; "/>
    </texts>
    <edges>
        <edge source="x" target="padx" label="(...)"/>
        <edge source="padx" target="numNeighbors" label="(...)"/>
        <edge source="numNeighbors" target="x" label="(...)"/>
    </edges>
    <widgets>
        <widget type="MatrixViewerWidget" pos-x="490" pos-y="20" width="380" height="370">
            <autoscalez>false</autoscalez>
            <projdistance>70.0</projdistance>
            <displaygrids>false</displaygrids>
            <displayxy>false</displayxy>
            <mesh>false</mesh>
            <projelevationangle>62.0</projelevationangle>
            <plotcolor>SPECTRUM</plotcolor>
            <proj2dscaling>5.145</proj2dscaling>
            <iconized>false</iconized>
            <projrotationangle>127.0</projrotationangle>
            <displayz>false</displayz>
            <sourcena>x</sourcena>
            <plottype>CONTOUR</plottype>
            <showtitlebar>false</showtitlebar>
            <title>x</title>
            <boxed>false</boxed>
        </widget>
    </widgets>
    <groups/>
    <reports/>
</stgraph>
