<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment><![CDATA[
	Note that in formulas the "less than" character must be coded as &lt;
	]]></comment>

	<entry key="en:Array functions__it:Funzioni per array|isScalar">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
			order($a0)==0
		) // <![CDATA[
			en:<code>isScalar(x)</code>: <code>true</code> if <code>x</code> is a scalar__
			it:<code>isScalar(x)</code>: <code>true</code> se <code>x</code> e' uno scalare
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|vector">
		if($numArgs!=2,
			"en:Two arguments are required__it:Sono richiesti due argomenti",
			array($a0,$a1)
		) // <![CDATA[
			en:<code>vector(n,x)</code>: vector of <code>n</code> elements of value <code>x</code>__
			it:<code>vector(n,x)</code>: vettore di <code>n</code> elementi di valore <code>x</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|isVector">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
			order($a0)==1
		) // <![CDATA[
			en:<code>isVector(x)</code>: <code>true</code> if <code>x</code> is a vector__
			it:<code>isVector(x)</code>: <code>true</code> se <code>x</code> e' un vettore
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|matrix">
		if($numArgs!=3,
			"en:Three arguments are required__it:Sono richiesti tre argomenti",
			array([$a0,$a1],$a2)
		) // <![CDATA[
			en:<code>matrix(n1,n2,x)</code>: matrix of <code>n1</code> rows and <code>n2</code> columns, each element of value <code>x</code>__
			it:<code>matrix(n1,n2,x)</code>: matrice di <code>n1</code> righe e <code>n2</code> colonne, con ogni elementi di valore <code>x</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|isMatrix">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
			order($a0)==2
		) // <![CDATA[
			en:<code>isMatrix(x)</code>: <code>true</code> if <code>x</code> is a matrix__
			it:<code>isMatrix(x)</code>: <code>true</code> se <code>x</code> e' una matrice
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|numRows">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
		order($a0)!=2,
			"en:The argument must be a matrix__it:L'argomento deve essere una matrice",
			get(@$a0,0)
		) // <![CDATA[
			en:<code>numRows(m)</code>: number of rows of the matrix <code>m</code>__
			it:<code>numRows(m)</code>: numero delle righe della matrice <code>m</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|numCols">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
		order($a0)!=2,
			"en:The argument must be a matrix__it:L'argomento deve essere una matrice",
			get(@$a0,1)
		) // <![CDATA[
			en:<code>numCols(m)</code>: number of columns of the matrix <code>m</code>__
			it:<code>numCols(m)</code>: numero delle colonne della matrice <code>m</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|lastDim">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
		{order($a0)}==0,
			"en:The argument cannot be a scalar__it:L'argomento non puo' essere uno scalare",
		$w0==1,
			@$a0,
			get(@$a0,$w0-1)
		) // <![CDATA[
			en:<code>lastDim(x)</code>: number of elements in the last (fastest) dimension of the array <code>x</code>__
			it:<code>lastDim(x)</code>: numero degli elementi nell'ultima dimensione dell'array <code>x</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|numEl">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
		{order($a0)}==0,
			1,
		$w0==1,
			@$a0,
			*/(@$a0)
		) // <![CDATA[
			en:<code>numEl(x)</code>: number of elements in the array <code>x</code>__
			it:<code>numEl(x)</code>: numero degli elementi nell'array <code>x</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|prod">
		if($numArgs!=2,
			"en:Two arguments are required__it:Sono richiesti due argomenti",
		order($a0)==2 && order($a1)==1 && numCols($a0)==@$a1,
			array(numRows($a0),+/($a0[[$i0],[]]*$a1)),
		order($a0)!=2 || order($a1)!=2,
			"en:Two matrices are required__it:Sono richieste due matrici",
		numCols($a0)!=numRows($a1),
			"en:The two matrices cannot multiplied with each other__it:Le due matrici non sono moltiplicabili tra loro",
			array([numRows($a0),numCols($a1)],+/($a0[[$i0],[]]*$a1[[],[$i1]]))
		) // <![CDATA[
			en:<code>prod(x,y)</code>: vector product of the matrices <code>x</code> and <code>y</code>__
			it:<code>prod(x,y)</code>: prodotto vettoriale delle matrici <code>x</code> e <code>y</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|isIn">
		if($numArgs!=2,
			"en:Two arguments are required__it:Sono richiesti due argomenti",
		order($a0)!=0,
			"en:The first argument must be a scalar__it:Il primo argomento deve essere uno scalare",
			+/($a0==flatten($a1))
		) // <![CDATA[
			en:<code>isIn(x,y)</code>: check whether the scalar <code>x</code> belongs to the array <code>y</code>__
			it:<code>isIn(x,y)</code>: controllo se lo scalare <code>x</code> appartiene all'array <code>y</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|sumIf">
		if($numArgs!=2,
			"en:Two arguments are required__it:Sono richiesti due argomenti",
		order($a0)!=1,
			"en:The first argument must be a vector__it:Il primo argomento deve essere un vettore",
			iter($a0,if(eval($a1),$0+$1,$0),0)
		) // <![CDATA[
			en:<code>sumIf(v,c)</code>: conditional sum over the elements of the vector <code>v</code>, where the condition <code>c</code> (written as string, i.e., delimited by double quotes) can contain the system variables <code>$1</code>, running over the vector elements, and <code>$i</code>, the corresponding index__
			it:<code>sumIf(v,c)</code>: somma condizionale sugli elementi del vettore <code>v</code> dove la condizione <code>c</code> (scritta come stringa, e dunque delimitata da doppi apici) puo' contenere le variabili di sistema <code>$1</code>, che varia sugli elementi del vettore, e <code>$i</code>, l'indice corrispondente
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|select">
		if($numArgs!=2,
			"en:Two arguments are required__it:Sono richiesti due argomenti",
		order($a0)!=1,
			"en:The first argument must be a vector__it:Il primo argomento deve essere un vettore",
			iter($a0,if(eval($a1),$0#$1,$0),[])
		) // <![CDATA[
			en:<code>select(v,c)</code>: subvector of the vector <code>v</code> whose elements satisfy the condition <code>c</code> (written as string, i.e., delimited by double quotes), which can contain the system variables <code>$1</code>, running over the vector elements, and <code>$i</code>, the corresponding index__
			it:<code>select(v,c)</code>: sottovettore del vettore <code>v</code> i cui elementi soddisfano la condizione <code>c</code> (scritta come stringa, e dunque delimitata da doppi apici), che puo' contenere le variabili di sistema <code>$1</code>, che varia sugli elementi del vettore, e <code>$i</code>, l'indice corrispondente
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|filter">
		if($numArgs!=2,
			"en:Two arguments are required__it:Sono richiesti due argomenti",
		order($a0)!=1||order($a1)!=1,
			"en:The arguments must be vectors__it:Gli argomenti devono essere vettori",
		@$a0!=@$a1,
			"en:The arguments must have the same size__it:Gli argomenti devono avere la stessa dimensione",
			remove($a0,$a1*[1:@$a1]-1)
		) // <![CDATA[
			en:<code>filter(v,c)</code>: subvector of the vector <code>v</code> obtained by removing the elements of value <code>1</code> in the boolean vector <code>c</code>__
			it:<code>filter(v,c)</code>: sottovettore del vettore <code>v</code> ottenuto rimuovendo gli elementi di valore <code>1</code> nel vettore booleano <code>c</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|countIf">
		if($numArgs!=2,
			"en:Two arguments are required__it:Sono richiesti due argomenti",
		order($a0)!=1||order($a1)!=1,
			"en:The arguments must be vectors__it:Gli argomenti devono essere vettori",
			array(@$a1,if(@$a0>1,+/($a0==$a1[$i0]),$a0==$a1[$i0]))
		) // <![CDATA[
			en:<code>countIf(v1,v2)</code>: vector containing the number of occurrences of elements of the vector <code>v2</code> in the vector <code>v1</code>__
			it:<code>countIf(v1,v2)</code>: vettore che contiene il numero di occorrenze di elementi del vettore <code>v2</code> nel vettore <code>v1</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|lpad">
		if($numArgs!=2,
			"en:Two arguments are required__it:Sono richiesti due argomenti",
		order($a0)!=1,
			"en:The first argument must be a vector__it:Il primo argomento deve essere un vettore",
		order($a1)!=0,
			"en:The first argument must be a vector__it:Il primo argomento deve essere un vettore",
		order($a1)!=0||$a1&lt;0||!isInt($a1),
			"en:The second argument must be an integer non-negative scalar__it:Il secondo argomento deve essere uno scalare intero non negativo",
		{@$a0}==$a1,
			$a0,
		$w0&lt;$a1,
			array($a1-$w0,0)#$a0,
			$a0[[($w0-$a1):($w0-1)]]
		) // <![CDATA[
			en:<code>lpad(v,x)</code>: vector of size <code>x</code> obtained from the vector <code>v</code> and left padding or trimming if required__
			it:<code>lpad(v,x)</code>: vettore di dimensione <code>x</code> ottenuto dal vettore <code>v</code> e aggiungendo o eliminando elementi a sinistra se necessario
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|flatten">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
		order($a0)&lt;2,
			$a0,
			resize($a0,[*/@$a0])
		) // <![CDATA[
			en:<code>flatten(x)</code>: vector obtained by flattening the array <code>x</code>__
			it:<code>flatten(x)</code>: vettore ottenuto rendendo unidimensionale l'array <code>x</code>
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|identity">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
		order($a0)!=0||$a0&lt;0,
			"en:The argument must be an integer non-negative scalar__it:L'argomento deve essere uno scalare intero non negativo",
			array([$a0,$a0],$i0==$i1)
		) // <![CDATA[
			en:<code>identity(x)</code>: identity matrix of <code>x</code> rows and columns__
			it:<code>identity(x)</code>: matrice identita' di <code>x</code> righe e colonne
		]]>
	</entry>

	<entry key="en:Array functions__it:Funzioni per array|isConstant">
		if($numArgs!=1,
			"en:One argument is required__it:E' richiesto un argomento",
		order($a0)==0,
			1,
		@{==|flatten($a0)}==0,
			1,
		@($w0)==1,	
			get($w0,0),
			min/($w0)
		) // <![CDATA[
			en:<code>isConstant(x)</code>: <code>true</code> if all elements of the array <code>x</code> are equal__
			it:<code>isConstant(x)</code>: <code>true</code> se tutti gli elementi dell'array <code>x</code> sono uguali
		]]>
	</entry>

</properties>
